mpz_class RSA::calcSignature(const mpz_class &d, const mpz_class &n, const mpz_class &hash) {
    mpz_class result;

    mpz_powm(result.get_mpz_t(), hash.get_mpz_t(), d.get_mpz_t(), n.get_mpz_t());

    return result;
}

mpz_class RSA::calcPrototypeSignature(const mpz_class &e, const mpz_class &n, const mpz_class &signature) {
    mpz_class result;

    mpz_powm(result.get_mpz_t(), signature.get_mpz_t(), e.get_mpz_t(), n.get_mpz_t());

    return result;
}

bool RSA::isCorrectSignature(const mpz_class &originalHash, const mpz_class &newHash) {
    if (originalHash != newHash) {
        return false;
    }

    return true;
}